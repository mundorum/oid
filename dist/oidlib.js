!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.oidlib=t():e.oidlib=t()}(self,(()=>(()=>{"use strict";var e={d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Bus:()=>n,ButtonOid:()=>u,ConsoleOid:()=>a,Oid:()=>l,OidBase:()=>r,OidUI:()=>c,Primitive:()=>o,css:()=>i,html:()=>s});const s=(e,...t)=>String.raw({raw:e},...t),i=(e,...t)=>String.raw({raw:e},...t);class n{constructor(){this._listeners=[],this._providers={},this._connections={}}subscribe(e,t){if(null!=e){let s={};"string"==typeof e&&null!=t?s[e]=t:"object"==typeof e&&(s=e);const i=this._listeners.slice();for(const e in s)null!=s[e]&&(e.includes("+")||e.includes("#")?i.push({topic:e,regexp:n._convertRegExp(e),handler:s[e]}):i.push({topic:e,handler:s[e]}));this._listeners=i}}unsubscribe(e){if(null!=e){const t={};"string"==typeof e&&null!=handler?t[e]=handler:"object"==typeof e&&(t=e);const s=this._listeners.slice();for(const e in t)for(const i in this._listeners)if(this._listeners[i].topic===e&&this._listeners[i].handler===t[e]){s.splice(i,1);break}this._listeners=s}}async publish(e,t){let s=!1;const i=this._listeners;for(const n in i){if(i[n].regexp){const t=i[n].regexp.exec(e);null!=t&&t[0]===e&&(s=!0)}else i[n].topic===e&&(s=!0);s&&i[n].handler(e,t)}}static _convertRegExp(e){return new RegExp(e.replace(/\//g,"\\/").replace(/\+/g,"[^/]+").replace(/#/g,".+"))}}n.i=new n;class o extends HTMLElement{constructor(){super(),this._bus=n.i}_subscribe(e,t){return this._bus.subscribe(e,t)}_unsubscribe(e,t){this._bus.unsubscribe(e,t)}async _publish(e,t){await this._bus.publish(e,t)}}class r extends o{constructor(){super(),this._toHandle=this._toHandle.bind(this),this.handleReceive=this.handleReceive.bind(this),this._buildReceiveHandlers()}connectedCallback(){this.hasAttribute("publish")&&this._mapNoticeTopic(this.publish),this.hasAttribute("subscribe")&&this._subscribeTopic(this.subscribe)}disconnectedCallback(){null!=this._subsTopic&&(null!=this._subsNote?this._unsubscribe(this._subsTopic,this._toHandle):this._unsubscribe(this._subsTopic,this.handleReceive))}static get observedAttributes(){return["publish","subscribe"]}get publish(){return this.getAttribute("publish")}set publish(e){this.setAttribute("publish",e),this._mapNoticeTopic(e)}get subscribe(){return this.getAttribute("subscribe")}set subscribe(e){this.setAttribute("subscribe",e),this._subscribeTopic(e)}_subscribeTopic(e){const t=e.lastIndexOf(":");-1!=t?(this._subsTopic=e.substring(0,t),this._subsNotice=e.substring(t+1),this._subscribe(this._subsTopic,this._toHandle)):(this._subsTopic=e,this._subscribe(e,this.handleReceive))}_mapNoticeTopic(e){const t=e.lastIndexOf(":");-1!=t?(this._pubNotice=e.substring(0,t),this._pubTopic=e.substring(t+1)):(this._pubNotice=e,this._pubTopic=e)}_toHandle(e,t){this.handleReceive(this._subsNotice?this._subsNotice:e,t)}notify(e,t){null!=this._pubNotice&&this._pubNotice==e&&null!=this._pubTopic&&this._publish(this._pubTopic,t)}handleReceive(e,t){if(null!=this._receiveHandler){const s=this._receiveHandler[e];null!=s&&s(e,t)}}_buildReceiveHandlers(){const e=this.constructor.spec;if(null!=e&&null!=e.receive)if(this._receiveHandler={},Array.isArray(e.receive))for(const t of e.receive)this._receiveHandler[t]=this["handle"+t[0].toUpperCase()+t.slice(1)].bind(this);else for(const[t,s]of Object.entries(e.receive))this._receiveHandler[t]=this[s].bind(this)}}class c extends r{connectedCallback(){super.connectedCallback(),this.render()}render(){this._presentation=null;const e=this.constructor.spec;if(e.template){const t=(e.styles?`<style>${e.styles}</style>`:"")+e.template;!1===e.shadow?(this.innerHTML=t,this._presentation=this.querySelector("#oid-prs")||this):this._presentation=this._shadowHTML(t)}}_shadowHTML(e){const t=document.createElement("template");t.innerHTML=e.replace(/{{this\.([^}]*)}}/g,((e,t)=>this[t]));const s=document.importNode(t.content,!0);return this.shadowRoot?this.shadowRoot.innerHTML="":this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(s),this.shadowRoot.querySelector("#oid-prs")||s}}class l{static component(e){let t=e.implementation;if(null==t){const s=!1===e.ui?r:c,i=e.element[0].toUpperCase()+e.element.slice(1).replace(/-([a-z])/g,(function(e){return e[1].toUpperCase()}));t=class extends s{},Object.defineProperty(t,"name",{value:i})}const s=[];if(e.properties){Object.defineProperty(t,"observedAttributes",{get:function(){return this.observed}});for(const i in e.properties){const n=e.properties[i];Object.defineProperty(t.prototype,i,null==t.prototype.render?{get:function(){return this["_"+i]},set:function(e){this["_"+i]=e}}:{get:function(){return this["_"+i]},set:function(e){this["_"+i]=e,this.render()}}),null!=n.attribute&&!1===n.attribute||s.push(n.attribute?n.attribute:i)}}t.prototype.attributeChangedCallback=function(e,t,s){this[e]=s},Object.assign(t,{spec:e,observed:s}),customElements.define(e.element,t)}}class u extends c{render(){super.render(),this._presentation.style.cursor="pointer",this._presentation.addEventListener("click",this._computeTrigger.bind(this))}_computeTrigger(){this.notify("click",{value:this.value||this.label})}}l.component({id:"oid:button",element:"button-oid",properties:{label:{},value:{}},implementation:u,styles:i`
  .button {
    border: 1px solid lightgray;
    border-radius: 5px;
    margin: 5px;
    color: #1d1d1b;
    padding: 14px 25px;
    text-align: center;
    text-decoration: none;
    display: block;
    width: 50%;
  }
  .button:hover {
    color: black;
    font-weight: bold;
    cursor: pointer;
  }`,template:s`
  <span id="oid-prs" class="button">{{this.label}}</span>`});class a extends c{handleDisplay(e,t){this._presentation&&t.value&&(this._presentation.value+=`${t.value}\n`)}}return l.component({id:"oid:console",element:"console-oid",properties:{label:{}},receive:["display"],implementation:a,styles:i`
  .console {
    width: 97%;
    font-family: "Courier New", monospace;
    font-size: 1em;
    background-color: lightgray
  }`,template:s`
  <textarea class="console" rows="10" id="oid-prs" readonly>
  </textarea>`}),t})()));