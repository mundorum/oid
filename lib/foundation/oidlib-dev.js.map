{"version":3,"file":"oidlib-dev.js","sources":["../../src/infra/literals.js","../../src/infra/bus.js","../../src/infra/sphere-setup.js","../../src/infra/sphere.js","../../src/base/oid-sphere.js","../../src/base/primitive.js","../../src/base/oid-base.js","../../src/base/oid-web.js","../../src/base/oid-ui.js","../../src/base/oid.js","../../src/base/interfaces-base.js","../../src/components/interfaces-components.js","../../src/base/oid-play.js","../../src/components/data/submit-oid.js","../../src/components/data/file-oid.js","../../src/components/data/local-storage-oid.js","../../src/components/ui/image-oid.js","../../src/components/ui/button-oid.js","../../src/components/ui/console-oid.js","../../src/base/oid-ui-input.js","../../src/components/ui/switch-input-oid.js","../../src/components/ui/slider-input-oid.js","../../src/components/ui/container/split-pane-oid.js","../../src/components/ui/container/state-pane-oid.js"],"sourcesContent":["export const html =\n  (strings, ...values) =>\n  String.raw({ raw: strings }, ...values)\n\nexport const css =\n  (strings, ...values) =>\n  String.raw({ raw: strings }, ...values)","export class Bus {\n  constructor() {\n    this._listeners = {}\n    this._listenersRgx = []\n    this._providers = {}\n    this._pendingCnx = {}\n  }\n\n  /* Message-oriented communication\n   ********************************/\n\n  subscribe (subscribed, handler) {\n    if (subscribed != null) {\n      let topics = {}\n      if (typeof subscribed === 'string' && handler != null)\n        topics[subscribed] = handler\n      else if (typeof subscribed === 'object')\n        topics = subscribed\n      const listenersRgx = this._listenersRgx.slice()\n      const listeners = { ...this._listeners }\n      for (const tp in topics) {\n        if (topics[tp] != null) {\n          // topic filter: transform wildcards in regular expressions\n          if (tp.includes('+') || tp.includes('#'))\n            listenersRgx.push([Bus._convertRegExp(tp), topics[tp], tp])\n          else {\n            if (listeners[tp] == null)\n              listeners[tp] = []\n            else\n              listeners[tp] = listeners[tp].slice() // clone\n            listeners[tp].push(topics[tp])\n          }\n        }\n      }\n      this._listenersRgx = listenersRgx\n      this._listeners = listeners\n    }\n  }\n\n  unsubscribe (subscribed) {\n    if (subscribed != null) {\n      const topics = {}\n      if (typeof subscribed === 'string' && handler != null)\n        topics[subscribed] = handler\n      else if (typeof subscribed === 'object')\n        topics = subscribed\n      const listenersRgx = this._listenersRgx.slice()\n      const listeners = { ...this._listeners }\n      for (const tp in topics) {\n        if (tp.includes('+') || tp.includes('#')) {\n          for (const l in listenersRgx) {\n            if (listenersRgx[l][1] === topics[tp] &&\n                listenersRgx[l][2] == tp) {\n              listenersRgx.splice(l, 1)\n              break\n            }\n          }\n        } else if (listeners[tp] != null) {\n          for (const l in listeners[tp]) {\n            if (listeners[tp][l] === topics[tp]) {\n              listeners[tp] = listeners[tp].toSplice(l, 1) // clone\n              break\n            }\n          }\n        }\n      }\n      this._listenersRgx = listenersRgx\n      this._listeners = listeners\n    }\n  }\n\n  async publish (topic, message) {\n    if (this._listeners[topic] != null)\n      for (const handler of this._listeners[topic])\n        handler(topic, message)\n    const listenersRgx = this._listenersRgx\n    for (const l of listenersRgx) {\n      const match = l[0].exec(topic)\n      if (match != null && match[0] === topic)\n        l[1](topic, message)\n    }\n  }\n\n  /* Message analysis services\n     *************************/\n\n  static _convertRegExp (filter) {\n    return new RegExp(filter.replace(/\\//g, '\\\\/')\n      .replace(/\\+/g, '[^\\/]+')\n      .replace(/#/g, '.+'))\n  }\n\n  /* Connection-oriented communication\n   ***********************************/\n\n  /*\n   * Components declare provided services. Each interface defines a type of\n   *  service. The same component can have several interfaces/services:\n   *   cInterface: interface provided by the component\n   *   id: unique id of the component instance that offers the service\n   *   provider: the component or component subobject that implements\n   *             the interface/service\n   */\n  provide (cInterface, id, provider) {\n    let status = false\n    if (id != null && cInterface != null && provider != null) {\n      const key = cInterface + '#' + id\n      if (this._providers[key] == null) {\n        status = true\n        this._providers[key] = provider\n        if (this._pendingCnx[key] != null) {\n          for (let c of this._pendingCnx[key])\n            c.connectionReady(cInterface, id, provider)\n          delete this._pendingCnx[key]\n        }\n      }\n    }\n    return status\n  }\n\n  /*\n   * Removes a provided service (usually, when the component is destroyed)\n   */\n  withhold (cInterface, id) {\n    let status = false\n    if (id != null && cInterface != null) {\n      const key = cInterface + '#' + id\n      if (this._providers[key]) {\n        status = true\n        delete this._providers[key]\n      }\n    }\n    return status\n  }\n\n  /*\n   * Connects a component to another one based on the id and a provided service.\n   *   id: id of the component that offers the service\n   *   cInterface: label related to the provided interface\n   *   callback: component that will be notified as soon as the interface is\n   *             connected\n   */\n  connect (cInterface, id, callback) {\n    let status = false\n    if (id != null && cInterface != null && callback != null) {\n      const key = cInterface + '#' + id\n      if (this._providers[key])\n        callback.connectionReady(cInterface, id, this._providers[key])\n        // callback.connectionReady(cInterface, id,\n        //     this.invoke.bind(this, key), this._providers[key])\n      else\n        if (this._pendingCnx[key])\n          this._pendingCnx[key].push(callback)\n        else\n          this._pendingCnx[key] = [callback]\n    }\n  }\n\n  /*\n   * Triggers a interface defined by an id and component, sending an optional\n   * message to it.\n   */\n  async invoke (cInterface, id, notice, message) {\n    // console.log('=== bus invoke', cInterface, id, notice, message)\n    // console.log(this._providers)\n    const key = cInterface + '#' + id\n    if (this._providers[key] != null)\n      return await\n        this._providers[key].handleInvoke(cInterface, notice, message)\n    else\n      return null\n  }\n}\n\nBus.i = new Bus()","import { Bus } from './bus.js'\n\nexport const sphereSetup = {\n  id: 'default',\n  bus: Bus.i,\n  stylesheets: '/lib/foundation/',\n  stydefault: ['stylesheets:oiddefault.css'],\n  assets: '/assets/'\n}","import { sphereSetup } from './sphere-setup'\n\nexport class Sphere {\n  constructor (id, bus, stylesheets, stydefault, assets) {\n    this._id = id || null\n    this._bus = (bus) ? bus : Sphere.i.bus\n    this._stylesheets = (stylesheets) ? stylesheets : Sphere.i.stylesheets\n    this._stydefault =\n      (stydefault) ? stydefault : Sphere.i.stydefault\n    this._assets = (assets) ? assets : Sphere.i.assets\n  }\n\n  static create (id, bus, stylesheets, stydefault, assets) {\n    if (id != null && Sphere._spheres[id] != null)\n      throw new Error(`Sphere with id ${id} already exists`)\n    const sphere = new Sphere(id, bus, stylesheets, stydefault, assets)\n    if (id != null)\n      Sphere._spheres[id] = sphere\n    return sphere\n  }\n\n  static get (id) {\n    return (id) ? (Sphere._spheres[id] || null) : null\n  }\n\n  get id () {\n    return this._id\n  }\n\n  get bus () {\n    return this._bus\n  }\n\n  set stylesheets (newValue) {\n    this._stylesheets = newValue\n  }\n\n  get stylesheets () {\n    return this._stylesheets\n  }\n\n  set stydefault (newValue) {\n    this._stydefault = newValue\n  }\n\n  get stydefault () {\n    return this._stydefault\n  }\n\n  set assets (newValue) {\n    this._assets = newValue\n  }\n\n  get assets () {\n    return this._assets\n  }\n}\n\n// controls the existing spheres that have id\nSphere._spheres = {}\n\nSphere.i = Sphere.create(\n  sphereSetup.id,\n  sphereSetup.bus,\n  sphereSetup.stylesheets,\n  sphereSetup.stydefault,\n  sphereSetup.assets\n)","import { Bus } from '../infra/bus.js'\nimport { Sphere } from '../infra/sphere.js'\n\nexport class OidSphere extends HTMLElement {\n  connectedCallback () {\n    // parametrizes the global sphere\n    if (this.hasAttribute('global')) {\n      this._sphere = Sphere.i\n      if (this.hasAttribute('stylesheets'))\n        Sphere.i.stydefault = this.getAttribute('stylesheets')\n      if (this.hasAttribute('stydefault'))\n        Sphere.i.stydefault = this.getAttribute('stydefault')\n      if (this.hasAttribute('assets'))\n        Sphere.i.assets = this.getAttribute('assets')\n      // cannot change the id and the bus of the global sphere\n    } else {\n      const id = this.getAttribute('id')\n      if (Sphere.get(id))\n        // if the sphere already exists, use it\n        this._sphere = Sphere.get(id)\n      else\n        this._sphere = Sphere.create(\n          this.getAttribute('id'),\n          new Bus(),\n          this.getAttribute('stylesheets'),\n          this.getAttribute('stydefault'),\n          this.getAttribute('assets'))\n    }\n  }\n\n  get id () {\n    return this._sphere.id\n  }\n\n  get stylesheets () {\n    return this._sphere.stylesheets\n  }\n\n  get stydefault () {\n    return this._sphere.stydefault\n  }\n\n  get assets () {\n    return this._sphere.assets\n  }\n\n  get sphere () {\n    return this._sphere\n  }\n}\n\nOidSphere.elementTag = 'oid-sphere'\ncustomElements.define(OidSphere.elementTag, OidSphere)","import { Sphere } from '../infra/sphere.js'\nimport { OidSphere } from './oid-sphere.js'\n\nexport class Primitive extends HTMLElement {\n  constructor () {\n    super()\n    this._sphere = null\n  }\n\n  get _bus () {\n    return (this._sphere == null) ? null : this._sphere.bus\n  }\n\n  connectedCallback () {\n    let ag = this._findAggregator(OidSphere)\n    if (ag != null)\n      this._sphere = ag.sphere\n    else\n      this._sphere = Sphere.i\n  }\n\n  _findAggregator(agClass) {\n    let parent = (this.parentNode != null)\n      ? this.parentNode\n      : ((this instanceof DocumentFragment) ? this.host : null)\n    while (parent != null && !(parent instanceof agClass))\n      parent = (parent.parentNode != null)\n        ? parent.parentNode\n        : ((parent instanceof DocumentFragment) ? parent.host : null)\n    return parent\n  }\n\n  /*\n   * Bus Proxy\n   */\n\n  _subscribe (subscribed, handler) {\n    if (this._bus != null)\n      this._bus.subscribe(subscribed, handler)\n  }\n\n  _unsubscribe (subscribed, handler) {\n    this._bus.unsubscribe(subscribed, handler)\n  }\n\n  async _publish (topic, message) {\n    await this._bus.publish(topic, message)\n  }\n\n  _provide (cInterface, id, provider) {\n    this._bus.provide(cInterface, id, provider)\n  }\n\n  _withhold (cInterface, id) {\n    this._bus.withhold(cInterface, id)\n  }\n\n  _connect (cInterface, id, callback) {\n    this._bus.connect(cInterface, id, callback)\n  }\n\n  async _invoke (cInterface, id, notice, message) {\n    return await this._bus.invoke (cInterface, id, notice, message)\n  }\n}","import { Bus } from '../infra/bus.js'\nimport { Oid } from './oid.js'\nimport { Primitive } from './primitive.js'\n\nexport class OidBase extends Primitive {\n  constructor () {\n    super()\n\n    this._mapTopicNotice = {}\n    this._rgxTopicNotice = []\n    this._mapNoticeTopic = {}\n    this._receiveHandler = {}\n    this._provideHandler = {}\n    this._connected = {}\n\n    this._convertNotice = this._convertNotice.bind(this)\n    this.handleNotice = this.handleNotice.bind(this)\n  }\n\n  async connectedCallback () {\n    super.connectedCallback()\n    await this._initialize()\n  }\n\n  disconnectedCallback () {\n    this._finalize()\n  }\n\n  async _initialize () {\n    const spec = this.constructor.spec\n    if (spec) {\n      this._buildHandlers(this._receiveHandler, spec.receive)\n      this._buildProviders()\n      this._buildProvidersHandlers()\n      this._buildEventDispatchers(spec.dispatcher)\n    }\n\n    if (spec && spec.properties) {\n      for (const [prop, def] of Object.entries(spec.properties))\n        if (def.default != null && !this.hasAttribute(prop))\n          this[prop] = def.default\n    }\n\n    if (this.hasAttribute('custom'))\n      this._custom = await Oid.getCustom(spec.id, this.getAttribute('custom'))\n    if (this.hasAttribute('publish'))\n      this._publishNoticeTopic(this.getAttribute('publish'))\n    if (this.hasAttribute('subscribe'))\n      this._subscribeTopicNotice(this.getAttribute('subscribe'))\n    if (this.hasAttribute('connect'))\n      this._connectInterface(this.getAttribute('connect'))\n  }\n\n  _buildProviders () {\n    const spec = this.constructor.spec\n    if (spec.provide != null && this.id)\n      for (const p in spec.provide)\n        this._provide(p, this.id, this)\n  }\n\n  _buildProvidersHandlers () {\n    const spec = this.constructor.spec\n    if (spec.provide != null)\n      for (const p in spec.provide) {\n        this._buildHandlers(\n          this._provideHandler, spec.provide[p].operations, p)\n      }\n  }\n\n  _removeProviders () {\n    const spec = this.constructor.spec\n    if (spec.provide != null && this.id)\n      for (const p in spec.provide)\n          this._withhold(p, this.id)\n  }\n\n  _buildHandlers (handlerSet, handlersSpec, cInterface) {\n    if (handlersSpec != null) {\n      const prefix = (cInterface == null) ? '' : cInterface + '.'\n      if (Array.isArray(handlersSpec)) {\n        for (const notice of handlersSpec)\n          if (handlerSet[prefix + notice] == null)\n            handlerSet[prefix + notice] =\n              this['handle' + notice[0].toUpperCase() +\n              notice.slice(1)].bind(this)\n      } else {\n        for (const [notice, noticeSpec] of Object.entries(handlersSpec)) {\n          if (handlerSet[prefix + notice] == null) {\n            const meth = (typeof noticeSpec === 'string')\n              ? noticeSpec\n              : ((noticeSpec.handler != null)\n                  ? noticeSpec.handler\n                  : 'handle' + notice[0].toUpperCase() + notice.slice(1))\n            handlerSet[prefix + notice] = this[meth].bind(this)\n          }\n        }\n      }\n    }\n  }\n\n  _buildEventDispatchers (dispatcherTempl) {\n    if (dispatcherTempl) {\n      this._dispatcher = []\n      for (const [atr, event, dispatch] of dispatcherTempl)\n        this._dispatcher.push([atr, event, dispatch.bind(this)])\n    }\n  }\n\n  _finalize () {\n    this._removeProviders()\n    for (const topic in this._mapTopicNotice)\n      if (this._mapTopicNotice[topic] != topic)\n        this._unsubscribe(topic, this._convertNotice)\n      else\n        this._unsubscribe(topic, this.handleNotice)\n  }\n\n  // call setter every time an observed attribute changes\n  attributeChangedCallback (name, oldValue, newValue) {\n    const jsName = name.replace(\n      /-([a-z])/g, (match, letter) => letter.toUpperCase())\n    this[jsName] = newValue\n  }\n\n  static get observedAttributes () {\n    return ['id']\n  }\n\n  get id () {\n    return this._id\n  }\n\n  set id (newValue) {\n    if (this._id != null && this._bus != null)\n      this._removeProviders()\n    this._id = newValue\n    if (this._bus != null)\n      this._buildProviders()\n  }\n\n  get publish () {\n    return this.getAttribute('publish')\n    // return this._publishProp\n  }\n\n  /*\n  set publish (newValue) {\n    this._publishProp = newValue\n    if (this._bus != null)\n      this._publishNoticeTopic(newValue)\n  }\n  */\n\n  get subscribe () {\n    return this.getAttribute('subscribe')\n    // return this._subscribeProp\n  }\n\n  /*\n  set subscribe (newValue) {\n    this._subscribeProp = newValue\n    if (this._bus != null)\n      this._subscribeTopicNotice(newValue)\n  }\n  */\n\n  get connect () {\n    return this.getAttribute('connect')\n    // return this._connectProp\n  }\n\n  /*\n  set connect (newValue) {\n    this._connectProp = newValue\n    if (this._bus != null)\n      this._connectInterface(newValue)\n  }\n  */\n\n  handleGet (notice, message) {\n    if (message.property != null)\n      return this[message.property]\n    else\n      return null\n  }\n\n  handleSet (notice, message) {\n    if (message.property != null && message.value != null)\n      this[message.property] = message.value\n  }\n\n  _subscribeTopicNotice (topicNotice) {\n    const tpnts = topicNotice.split(';')\n    for (const tn of tpnts) {\n      const parts = tn.split('~')\n      if (parts.length > 1) {\n        const topic = parts[0].trim()\n        if (topic.includes('+') || topic.includes('#'))\n          this._rgxTopicNotice.push(\n            [Bus._convertRegExp(topic), parts[1].trim(), topic])\n        else\n          this._mapTopicNotice[topic] = parts[1].trim()\n        this._subscribe(topic, this._convertNotice)\n      } else {\n        const topic = tn.trim()\n        this._mapTopicNotice[topic] = topic  // store to unsubscribe\n        this._subscribe(topic, this.handleNotice)\n      }\n    }\n  }\n\n  _publishNoticeTopic (noticeTopic) {\n    const nttps = noticeTopic.split(';')\n    for (const nt of nttps) {\n      const parts = nt.split('~')\n      if (parts.length > 1)\n        this._mapNoticeTopic[parts[0].trim()] = parts[1].trim()\n      else\n        this._mapNoticeTopic[nt.trim()] = nt.trim()\n    }\n  }\n\n  _connectInterface (idInterface) {\n    let status = true\n    const idint = idInterface.split(';')\n    for (const ii of idint) {\n      const parts = ii.split('#')\n      if (parts.length > 1)\n        this._connect(parts[0].trim(), parts[1].trim(), this)\n      else\n        status = false\n    }\n    return status\n  }\n\n  _notify (notice, message) {\n    if (this._mapNoticeTopic[notice] != null)\n      this._publish(this._mapNoticeTopic[notice], message)\n  }\n\n  _convertNotice (topic, message) {\n    if (this._mapTopicNotice[topic] != null)\n      this.handleNotice(this._mapTopicNotice[topic], message)\n    else\n      for (const [rgx, notice] of this._rgxTopicNotice) {\n        const match = rgx.exec(topic)\n        if (match != null && match[0] === topic) {\n          this.handleNotice(notice, message)\n          break\n        }\n      }\n  }\n\n  connectTo (cInterface, component) {\n    if (component.id)\n      this._connect(cInterface, component.id, this)\n  }\n\n  connectionReady(cInterface, id, component) {\n    if (this._connected[cInterface] == null)\n      this._connected[cInterface] = []\n    this._connected[cInterface].push(id)\n  }\n\n  async _invoke (cInterface, notice, message) {\n    const intSpec = Oid.getInterface(cInterface)\n    if (this._connected[cInterface] != null) {\n      if (intSpec.response != null &&\n          intSpec.response === true) {\n        const responses = []\n        for (const id of this._connected[cInterface])\n          responses.push(await this._bus.invoke (cInterface, id, notice, message))\n        return (intSpec.cardinality &&\n                intSpec.cardinality[2] == '1')\n                ? responses[0] : responses\n      } else {\n        for (const id of this._connected[cInterface])\n          return await this._bus.invoke (cInterface, id, notice, message)\n      }\n    }\n  }\n\n  handleNotice (notice, message) {\n    if (this._receiveHandler[notice] != null)\n      this._receiveHandler[notice](notice, message)\n  }\n\n  handleInvoke (cInterface, notice, message) {\n    let response = null\n    if (this._provideHandler[cInterface + '.' + notice] != null)\n      response =\n        this._provideHandler[cInterface + '.' + notice](notice, message)\n    return response\n  }\n\n  _customExists (field) {\n    return this._custom != null && this._custom.hasOwnProperty(field)\n  }\n\n  _getCustomField (field) {\n    return (this._custom == null || this._custom[field] == null)\n      ? null : this._custom[field]\n  }\n\n  _callCustom (operation, parameters) {\n    if (this._custom != null && this._custom[operation] != null)\n      return this._custom[operation](this, parameters)\n  }\n}","import { OidBase } from './oid-base.js'\n\nexport class OidWeb extends OidBase {\n}","import { Oid } from './oid.js'\nimport { OidWeb } from './oid-web.js'\n\nexport class OidUI extends OidWeb {\n  async connectedCallback () {\n    await super.connectedCallback()\n\n    // resolve dynamic styles\n    this._stylesheets = this.constructor.spec.stylesheets\n      .replace('href=\"default\"', 'href=\"' + this._sphere.stydefault + '\"')\n      .replace('href=\"stylesheets:', 'href=\"' + this._sphere.stylesheets)\n\n    this.render()\n  }\n\n  render () {\n    const spec = this.constructor.spec\n\n    // handles a dynamic template\n    let template = (spec != null) ? spec.template : null\n    if (this.template) {\n      const tmpl = this.template()\n      if (tmpl != this._template) {\n        this._template = tmpl\n        const td = Oid.prepareDispatchers(tmpl, this.constructor)\n        this._templatePre = td.template\n        this._buildEventDispatchers(td.dispatcher, this)\n      }\n      template = this._templatePre\n    }\n\n    this._presentation = null\n    if (spec != null && template != null) {\n      let customTemplate = this._getCustomField('style')\n      customTemplate =  (customTemplate)\n        ? `<style>${customTemplate}</style>` : ''\n\n      const html =\n        (this._stylesheets + spec.styles + customTemplate + template)\n        .replace(\n          /{{[ \\t]*(url:)?[ \\t]*this\\.([^}]*)}}/g,\n          (match, p1, p2) => {\n            p2 = (p2) ? p2.trim() : ''\n            let value = (this[p2]) ? this[p2] : ''\n            if (p1 === 'url:')\n              value = value.replace('assets:', this._sphere.assets)\n            return value\n          })\n\n      if (spec.shadow === false) {\n        this.innerHTML = html\n        this._presentation = this.querySelector('#oid-prs') || this\n      } else\n        this._presentation = this._shadowHTML(html)\n\n      if (this._dispatcher) {\n        const query = (spec.shadow === false) ? this : this.shadowRoot\n        for (const [atr, event, dispatch] of this._dispatcher) {\n          const target = query.querySelector('[' + atr + ']')\n          target.addEventListener(event, dispatch)\n        }\n      }\n    }\n  }\n\n  _shadowHTML (html) {\n    const clone = OidUI.prepareShadow(this, html)\n    return this.shadowRoot.querySelector('#oid-prs') || clone\n  }\n\n  static prepareShadow (owner, html) {\n    const template = document.createElement('template')\n    template.innerHTML = html\n    const clone = document.importNode(template.content, true)\n    if (!owner.shadowRoot)\n      owner.attachShadow({ mode: 'open' })\n    else\n      owner.shadowRoot.innerHTML = ''\n    owner.shadowRoot.appendChild(clone)\n    return clone\n  }\n}","import { OidBase } from './oid-base.js'\nimport { OidWeb } from './oid-web.js'\nimport { OidUI } from './oid-ui.js'\n\nexport class Oid {\n  static eventAttribute = 'oidevent_'\n  static defaultInterface = ['itf:oid']\n\n  static _interfaceReg = {}\n  static _oidReg = {}\n  static _oidCustom = {}\n  static _customQueue = {}\n  static _defaultSpec = {}\n\n  static cInterface (spec) {\n    if (spec != null)\n      Oid._interfaceReg[spec.id] = spec\n  }\n\n  static getInterface (cInterface) {\n    return Oid._interfaceReg[cInterface]\n  }\n\n  static component (spec) {\n    // add default values\n    spec = Object.assign({}, Oid._defaultSpec, spec)\n\n    // define the class implementation\n    let impl = spec.implementation\n    if (impl == null) {\n      const inh =\n        (spec.ui === false || spec.template == null)\n          ? ((spec.element == null) ? OidBase : OidWeb)\n          : OidUI\n      const className = spec.element[0].toUpperCase() +\n        spec.element.slice(1)\n          .replace(/-([a-z])/g, (match, letter) => letter.toUpperCase())\n      impl = class extends inh { }\n      Object.defineProperty(impl, 'name', {value: className})\n    }\n\n    // build property getters and setters\n    const observed = impl.observedAttributes.slice()\n    if (spec.properties) {\n      Object.defineProperty(impl, 'observedAttributes', {\n        get: function() { return this.observed }\n      })\n      for (const pname in spec.properties) {\n        const property = spec.properties[pname]\n        const jsName = pname.replace(\n          /-([a-z])/g, (match, letter) => letter.toUpperCase())\n        Object.defineProperty(impl.prototype, jsName,\n          ((property.readonly)\n              ? {\n                  get: function() {return this['_' + jsName]}\n                }\n              : (impl.prototype.render == null)\n                 ? {\n                    get: function() {return this['_' + jsName]},\n                    set: function(newValue) {\n                      this['_' + jsName] = newValue\n                    }\n                  }\n                  : {\n                      get: function() {return this['_' + jsName]},\n                      set: function(newValue) {\n                        const old = this['_' + jsName]\n                        this['_' + jsName] = newValue\n                        if (old != newValue && this._sphere)\n                          this.render()\n                      }\n                    }\n          )\n        )\n        if (property.attribute == null || property.attribute !== false)\n          observed.push(pname)\n      }\n    }\n\n    // associate interface ids to specifications\n    spec.provide = (spec.provide == null)\n      ? Oid.defaultInterface : spec.provide.concat(Oid.defaultInterface)\n    if (spec.provide) {\n      const provideSpec = {}\n      for (const p of spec.provide) {\n        const cInterface = Oid._interfaceReg[p]\n        if (cInterface == null)\n          throw new Error('Unknown interface id: ' + p)\n        else\n          provideSpec[p] = cInterface\n      }\n      spec.provide = provideSpec\n    }\n\n    Oid.stylePreprocess(spec)\n\n    const td = Oid.prepareDispatchers(spec.template, impl)\n    spec.template = td.template\n    if (td.dispatcher)\n      spec.dispatcher = td.dispatcher\n\n    // attach the specification to the implementation\n    Object.assign(impl, {spec: spec, observed: observed})\n  \n    // <TODO> provisory - classes without element will not inherit HTMLElement\n    if (spec.element == null)\n      spec.element = 'internal-' + spec.id.replace(':', '-')\n    customElements.define(spec.element, impl)\n  \n    // register the implementation in the dictionary\n    Oid._oidReg[spec.id] = impl\n  }\n\n  static componentSet (id, complementarySpec) {\n    if (id != null && Oid._oidReg[id] != null) {\n      const spec = Oid._oidReg[id].spec\n      for (const p in complementarySpec)\n        spec[p] = complementarySpec[p]\n      Oid.stylePreprocess(spec)\n    }\n  }\n\n  // styles and template preprocessing\n  static stylePreprocess (spec) {\n    let sty = ''\n    if (spec.stylesheets) {\n      let ss = spec.stylesheets\n      if (!Array.isArray(ss)) ss = [ss]\n      for (const s of ss)\n        sty += `<link href=\"${s}\" rel=\"stylesheet\">`\n    }\n    spec.stylesheets = sty\n    spec.styles = (spec.styles) ? `<style>${spec.styles}</style>` : ''\n  }\n\n  static prepareDispatchers (template, impl) {\n    let dispatcher = null\n    if (template) {\n      let atrn = 1\n      const te = template.split(\n        /@([^= >]*)[ \\t]*(?:=[ \\t]*{{[ \\t]*this\\.([^}]*)[ \\t]*}})?/)\n      if (te.length > 1) {\n        dispatcher = []\n        let ntempl = ''\n        for (let i = 0; i + 2 < te.length; i += 3) {\n          ntempl +=\n            te[i] + Oid.eventAttribute + atrn + ' '\n          const evt = te[i + 1].trim()\n          const funcName = (te[i + 2] != null)\n            ? te[i + 2].trim()\n            : '_on' + evt[0].toUpperCase() + evt.substring(1)\n          dispatcher.push([\n            Oid.eventAttribute + atrn, evt,\n            impl.prototype[funcName]])\n          atrn++\n        }\n        template = ntempl + te[te.length - 1]\n      }\n    }\n    return {\n      template: template,\n      dispatcher: dispatcher\n    }\n  }\n\n  static create (componentId, properties) {\n    const impl = Oid._oidReg[componentId]\n    if (impl == null)\n      throw new Error('Unknown component id: ' + componentId)\n    const instance = document.createElement(impl.spec.element)\n    if (properties != null) {\n      for (const p in properties)\n        instance.setAttribute(p, properties[p])\n    }\n    return instance\n  }\n\n  static customize (id, spec) {\n    if (id != null && Oid._oidReg[id] != null &&\n        spec != null && spec.cid != null) {\n      Oid._oidCustom[id + '.' + spec.cid] = spec\n      if (Oid._customQueue[id + '.' + spec.cid] != null) {\n        Oid._customQueue[id + '.' + spec.cid]()\n        delete Oid._customQueue[id + '.' + spec.cid]\n      }\n    }\n  }\n\n  static async getCustom (id, cid) {\n    if (id == null || cid == null)\n      return null\n\n    // wait the customization\n    if (Oid._oidCustom[id + '.' + cid] == null) {\n      const promise = new Promise((resolve, reject) => {\n        const callback = function () {\n          resolve()\n        }\n        Oid._customQueue[id + '.' + cid] = callback\n      })\n      await promise\n    }\n    return Oid._oidCustom[id + '.' + cid]\n  }\n\n  static setDefault (spec) {\n    this._defaultSpec = spec\n  }\n\n  static addDefault (spec) {\n    for (const p in spec) {\n      if (this._defaultSpec[p] == null)\n        this._defaultSpec[p] = spec[p]\n      else if (Array.isArray(this._defaultSpec[p]))\n        this._defaultSpec[p] = this._defaultSpec[p].concat(spec[p])\n      else if (typeof this._defaultSpec[p] === 'object')\n        Object.assign(this._defaultSpec[p], spec[p])\n      else\n        this._defaultSpec[p] = spec[p]\n    }\n  }\n}","import { Oid } from './oid'\n\nOid.cInterface ({\n  id: 'itf:oid',\n  operations: {\n    'get': {response: true},\n    'set': {response: false}\n  },\n  cardinality: 'n:n'\n})","import { Oid } from '../base/oid'\n\nOid.cInterface ({\n  id: 'itf:transfer',\n  operations: ['send'],\n  cardinality: 'n:n'\n})\n\nOid.cInterface ({\n  id: 'itf:iterate',\n  operations: {\n    'first': {response: true},\n    'next': {response: true}\n  },\n  cardinality: '1:n'\n})","import { html } from '../infra/literals.js'\nimport { Bus } from '../infra/bus.js'\nimport { OidSphere } from './oid-sphere.js'\nimport { OidUI } from './oid-ui.js'\n\nexport class OidPlay extends OidSphere {\n  connectedCallback () {\n    super.connectedCallback()\n\n    const html = this._prepareHTML()\n\n    const template =\n      OidPlay.template\n        .replace('{stylesheet}', this.stylesheet)\n        .replace('{code}',\n          OidPlay.code\n            .replace('{html}', html)\n            .replace('{rows}', this._rows(html)))\n        .replace('{console}', (this.messages ?\n          OidPlay.console\n            .replace('{rows}', ((this.rows) ? this.rows : OidPlay.rows)) : ''))\n\n    OidUI.prepareShadow(this, template)\n    this._scriptPanel = this.shadowRoot.querySelector('#script')\n    this._unlockScript = this._unlockScript.bind(this)\n    this._scriptPanel.addEventListener('click', this._unlockScript)\n    this._buttonRender = this.shadowRoot.querySelector('#btn-render')\n    this._buttonRender.addEventListener('click', this._computeRender.bind(this))\n    this._observer = new MutationObserver(this._scriptUpdated.bind(this))\n    this._observer.observe(this,\n                           {attributes: true, childList: true, subtree: true})\n\n    this.sphere.bus.subscribe('#', this._busMonitor.bind(this))\n  }\n\n  static get observedAttributes () {\n    return OidSphere.observedAttributes.concat(['messages', 'rows'])\n  }\n\n  get messages () {\n    return this.hasAttribute('messages')\n  }\n\n  get messages () {\n    return this.hasAttribute('messages')\n  }\n\n  get rows () {\n    return this.getAttribute('rows')\n  }\n\n  set rows (newValue) {\n    this.setAttribute('rows', newValue)\n  }\n\n  _scriptUpdated(mutationsList, observer) {\n    const html = this._prepareHTML()\n    this._scriptPanel.value = html\n    this._scriptPanel.rows = this._rows(html)\n  }\n\n  _rows (html) {\n    const lines = html.split(/\\r\\n|\\r|\\n/)\n    let rows = 0\n    lines.forEach(l => {\n      rows += Math.floor(l.length / 45) + 1\n    })\n    return rows\n  }\n\n  _prepareHTML () {\n    let html = this.innerHTML.replace('=\"\"', '')\n                             .replace(/^[\\r\\n]+/, '')\n                             .replace(/[\\r\\n]+$/, '')\n    if (html.startsWith(' ') || html.startsWith('\\t')) {\n      const indent = html.match(/^[ \\t]+/)\n      html = html.replace(new RegExp('^' + indent, 'gm'), '')\n    }\n    return html\n  }\n\n  _unlockScript() {\n    this._scriptPanel.removeEventListener('click', this._unlockScript)\n    this._scriptPanel.readOnly = false\n    this._buttonRender.style.display = 'initial'\n  }\n\n  _computeRender() {\n    this.shadowRoot.querySelector('#render').innerHTML = this._scriptPanel.value\n  }\n\n  _busMonitor (topic, message) {\n    if (topic != 'bus/monitor')\n    this.sphere.bus.publish('bus/monitor', {value: `[${topic}] ${JSON.stringify(message)}`})\n  }\n}\n\nOidPlay.rows = 5\n\nOidPlay.code =\nhtml`<div style=\"width:100%;display:flex\">\n<textarea id=\"script\" class=\"code\" style=\"width:100%;cursor:pointer\" rows=\"{rows}\" readonly>{html}</textarea>\n<button id=\"btn-render\" class=\"btn btn-secondary\" style=\"width:auto;display:none\">Render</button>\n</div>`\n\nOidPlay.template =\nhtml`<link rel=\"stylesheet\" href=\"{stylesheet}\">\n{code}\n<div id=\"render\"><slot></slot></div>\n{console}`\n\nOidPlay.console = \nhtml`<div id=\"msg-pnl\" style=\"width:100%\">\n  <b>Messages on the Bus</b><br>\n  <console-oid rows=\"{rows}\" class=\"code\" prompt=\"\" subscribe=\"bus/monitor~display\"></console-oid>\n</div>`\n\nOidPlay.elementTag = 'oid-play'\ncustomElements.define(OidPlay.elementTag, OidPlay)","/**\n * Transforms data from a form in a REST submission\n */\n\nimport { Oid } from '../../base/oid.js'\nimport { OidWeb } from '../../base/oid-web.js'\n\nexport class SubmitOid extends OidWeb {\n  async handleSubmit (topic, message) {\n    const toSubmit = {}\n    const schema = this._getCustomField('schema')\n    let form = null\n    if (schema != null) {\n      for (let s of Object.keys(schema)) {\n        let field = document.querySelector('#' + s)\n        if (field != null)\n          toSubmit[s] = field.value\n      }\n    } else {\n      form = this.parentNode\n      while (form != null && form.nodeName.toLowerCase() != 'form')\n        form = form.parentNode\n      if (form != null)\n        for (let f of form) {\n          if (f.type == 'radio' || f.type == 'checkbox') {\n            if (f.checked) {\n              if (f.type == 'checkbox' || !f.hasAttribute('name'))\n                toSubmit[f.id] = f.value\n              else\n                toSubmit[f.name] = f.value\n            }\n          } else\n            toSubmit[f.id] = f.value\n        }\n    }\n    if (!this._customExists('pre') || this._callCustom('pre', toSubmit) === true) {\n      this._notify('submit', {value: toSubmit})\n      this._invoke('itf:transfer', 'send', {value: toSubmit})\n    }\n  }\n\n  handleUpdate (topic, message) {\n    if (message.value) {\n      let form = this.parentNode\n      while (form != null && form.nodeName.toLowerCase() != 'form')\n        form = form.parentNode\n      if (form != null)\n        for (let f of form) {\n          if (f.type == 'radio' || f.type == 'checkbox') {\n            if (f.checked) {\n              if (f.type == 'checkbox' || !f.hasAttribute('name'))\n                f.value = message.value[f.id]\n              else\n                f.value = message.value[f.name]\n            }\n          } else\n            f.value = message.value[f.id]\n        }\n    }\n  }\n}\n\nOid.component(\n{\n  id: 'oid:submit',\n  element: 'submit-oid',\n  receive: ['submit', 'update'],\n  implementation: SubmitOid\n})\n","import { html, css } from '../../infra/literals.js'\nimport { Oid } from '../../base/oid.js'\nimport { OidUI } from '../../base/oid-ui.js'\n\nexport class FileOid extends OidUI {\n  _onDragover (event) {\n    if (this.pre)\n      this._presentation.innerHTML = this.pre\n    event.preventDefault()\n  }\n\n  async _onDrop (event) {\n    event.preventDefault()\n    if (this.post)\n      this._presentation.innerHTML = this.post\n\n    let file = null\n    if (event.dataTransfer.items) {\n      for (const item of event.dataTransfer.items) {\n        if (item.kind === 'file')\n          file = item.getAsFile()\n      }\n    } else\n      file = event.dataTransfer.files[0]\n    let content = await file.text()\n    if (this.filetype == 'json') content = JSON.parse(content)\n    this._notify('loaded', {value: content})\n    this._invoke('itf:transfer', 'send', {value: content})\n  }\n\n  handleStore (topic, message) {\n    let content = message.value || ''\n    if (this.filetype == 'json') content = JSON.stringify(content)\n    const a = document.createElement('a')\n    a.style.display = 'none'\n    document.body.appendChild(a)\n    a.href = window.URL.createObjectURL(\n      new Blob([content], {type: 'text/plain'}))\n    a.setAttribute('download', message.filename || this.filename)\n    a.click()\n    window.URL.revokeObjectURL(a.href)\n    document.body.removeChild(a)\n  }\n}\n\nOid.component(\n{\n  id: 'oid:file',\n  element: 'file-oid',\n  properties: {\n    label: { default: 'Drop Zone' },\n    pre:   { default: 'Drop your file here' },\n    post:  { default: 'File loaded' },\n    filename: { default: 'file.txt' },\n    filetype: { default: 'plain' }  // plain, json\n  },\n  receive: ['store'],\n  implementation: FileOid,\n  styles: css`\n  #oid-prs {\n    border: 5px solid;\n  }`,\n  template: html`\n  <div id=\"oid-prs\" @dragover @drop>{{this.label}}</div>`\n})","import { Oid } from '../../base/oid.js'\nimport { OidWeb } from '../../base/oid-web.js'\n\nexport class LocalStorageOid extends OidWeb {\n  handleLoad (topic, message) {\n    const key = `${this.dataset}:${(message.collection||this.collection)}:${(message.key||this.key)}`\n    const content = JSON.parse(localStorage.getItem(key))\n    this._notify('loaded', {value: content})\n    this._invoke('itf:transfer', 'send', {value: content})\n  }\n\n  handleStore (topic, message) {\n    if (message.value) {\n      const key = `${this.dataset}:${(message.collection||this.collection)}:${(message.key||this.key)}`\n      localStorage.setItem(key, JSON.stringify(message.value))\n    }\n  }\n}\n\nOid.component(\n{\n  id: 'oid:local-storage',\n  element: 'local-storage-oid',\n  receive: ['load', 'store'],\n  properties: {\n    dataset: { default: 'default-mundorum-oid' },\n    collection: { default: 'default' },\n    key: { default: 'default' }\n  },\n  implementation: LocalStorageOid\n})","import { html } from '../../infra/literals.js'\nimport { Oid } from '../../base/oid.js'\nimport { OidUI } from '../../base/oid-ui.js'\n\nexport class ImageOid extends OidUI {\n  _onClick () {\n    this._notify('click', {value: this.label || this.source})\n  }\n\n  _onMouseenter () {\n    this._notify('mouseenter', {value: this.label || this.source})\n  }\n\n  _onMouseleave () {\n    this._notify('mouseleave', {value: this.label || this.source})\n  }\n}\n\nOid.component(\n{\n  id: 'oid:image',\n  element: 'image-oid',\n  properties: {\n    source: {default: 'assets:images/image.svg'},\n    label: {}\n  },\n  implementation: ImageOid,\n  stylesheets: 'default',\n  template: html`\n  <image id=\"oid-prs\" src=\"{{url:this.source}}\" alt=\"{{this.label}}\"\n    @click @mouseenter @mouseleave>`\n})","import { html } from '../../infra/literals.js'\nimport { Oid } from '../../base/oid.js'\nimport { OidUI } from '../../base/oid-ui.js'\n\nexport class ButtonOid extends OidUI {\n  _onClick () {\n    this._callCustom('click')\n    this._notify('click', {value: this.value || this.label})\n    this._invoke('itf:transfer', 'send', {value: this.value || this.label})\n  }\n\n  _onMouseenter () {\n    this._notify('mouseenter', {value: this.value || this.label})\n  }\n\n  _onMouseleave () {\n    this._notify('mouseleave', {value: this.value || this.label})\n  }\n}\n\nOid.component(\n{\n  id: 'oid:button',\n  element: 'button-oid',\n  properties: {\n    label: {},\n    value: {}\n  },\n  implementation: ButtonOid,\n  stylesheets: 'default',\n  template: html`\n  <button id=\"oid-prs\" class=\"btn btn-primary\"\n    @click @mouseenter @mouseleave>\n    {{this.label}}\n  </button>`\n})","import { html, css } from '../../infra/literals.js'\nimport { Oid } from '../../base/oid'\nimport { OidUI } from '../../base/oid-ui'\n\nexport class ConsoleOid extends OidUI {\n  handleSend (topic, message) {\n    if (this._presentation && message && message.value)\n      if (typeof message.value === 'object')\n        message.value = JSON.stringify(message.value)\n      this._presentation.value +=\n        (this.prompt.length > 0 ? `${this.prompt} ` : '') +\n      `${message.value}\\n`\n  }\n}\n\nOid.component({\n  id: 'oid:console',\n  element: 'console-oid',\n  properties: {\n    prompt: {default: '>'},\n    rows: {default: 10}\n  },\n  receive: {'display': 'handleSend'},\n  provide: ['itf:transfer'],\n  implementation: ConsoleOid,\n  styles: css`\n  .console {\n    width: 100%;\n    font-family: \"Courier New\", monospace;\n    font-size: 1em;\n    background-color: lightgray\n  }`,\n  template: html`\n  <textarea class=\"console\" rows=\"{{this.rows}}\" id=\"oid-prs\" readonly></textarea>`\n})","/**\n * Base for all UI input components\n */\n\nimport { OidUI } from './oid-ui.js'\n\nexport class OidUIInput extends OidUI {\n  connectedCallback () {\n    this._value = this.getAttribute('value') || false\n    super.connectedCallback()\n  }\n\n  static get observedAttributes () {\n    return OidUI.observedAttributes.concat(\n      ['variable', 'value'])\n  }\n\n  get variable () {\n    // return this.getAttribute('variable')\n    return this._variable\n  }\n\n  set variable (newValue) {\n    this._variable = newValue\n    // this.setAttribute('variable', newValue)\n  }\n\n  get value () {\n    return this._value\n  }\n\n  set value (newValue) {\n    this._value = newValue\n  }\n}\n","import { html, css } from '../../infra/literals.js'\nimport { Oid } from '../../base/oid.js'\nimport { OidUIInput } from '../../base/oid-ui-input.js'\n\nexport class SwitchOid extends OidUIInput {\n  connectedCallback () {\n    super.connectedCallback()\n    if (this.hasAttribute('value')) {\n      // <TODO> automatically recognize attribute type and improve render\n      this.value = !(this.getAttribute('value') === 'off')\n      this.render()\n    }\n    this._notify('initial',\n      { value: (this.value) ? this.on : this.off })\n  }\n\n  render () {\n    super.render()\n    this._input =\n      this._presentation.querySelector('#oid-input')\n    this._input.checked = this.value\n  }\n\n  handleInvert (topic, message) {\n    this.value = !this.value\n    if (this.value)\n      this._input.checked = true\n    else\n      this._input.checked = false\n    this._notifyState()\n  }\n\n  handleOn () {\n    this.value = true\n    this._input.checked = true\n    this._notifyState()\n  }\n\n  handleOff () {\n    this.value = false\n    this._input.checked = false\n    this._notifyState()\n  }\n\n  handleRepublish (topic, message) {\n    if (this.value)\n      this._notify('republish', message)\n  }\n\n  _onInput () {\n    this._value = this._input.checked\n    this._notifyState()\n  }\n\n  _notifyState () {\n    const state = (this._value) ? this.on : this.off\n    this._notify('change', { value: state })\n    this._notify(state, { value: state })\n  }\n}\n\nOid.component(\n{\n  id: 'oid:switch',\n  element: 'switch-oid',\n  // properties: variable and value inherited from OidUIInput\n  properties: {\n    on:  {default: 'on'},\n    off: {default: 'off'}\n  },\n  receive: ['invert', 'on', 'off', 'republish'],\n  implementation: SwitchOid,\n  styles: css`\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n  }\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }\n  input:checked + .slider {\n    background-color: #2196F3;\n  }\n  input:focus + .slider {\n    box-shadow: 0 0 1px #2196F3;\n  }\n  input:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n  .slider.round {\n    border-radius: 34px;\n  }\n  .slider.round:before {\n    border-radius: 50%;\n  }`,\n  template: html`\n  <label id=\"oid-prs\" class=\"switch\">\n    <input id=\"oid-input\" type=\"checkbox\" @input>\n    <span class=\"slider round\"></span>\n  </label>`\n})","import { html } from '../../infra/literals.js'\nimport { Oid } from '../../base/oid.js'\nimport { OidUIInput } from '../../base/oid-ui-input.js'\n\nexport class SliderOid extends OidUIInput {\n  connectedCallback () {\n    super.connectedCallback()\n    if (!this.hasAttribute('value')) {\n      // <TODO> automatically recognize attribute type and improve render\n      this.value = \n        Math.round((parseInt('' + this.min) + parseInt('' + this.max)) / 2)\n      this.render()\n    }\n    this._notify('initial', { value: this.value })\n  }\n\n  render () {\n    super.render()\n    this._input = this._presentation.querySelector('#oid-input')\n    if (this.hasAttribute('index')) {\n      this._index = this._presentation.querySelector('#index')\n      this._index.innerHTML = this.value\n    }\n  }\n\n  _onInput () {\n    this._value = this._input.value\n    if (this.hasAttribute('index'))\n      this._index.innerHTML = this.value\n    this._notify('change', { value: this.value })\n  }\n}\n\nOid.component(\n{\n  id: 'oid:slider',\n  element: 'slider-oid',\n  properties: {\n    min: {default: 0},\n    max: {default: 100},\n    index: {default: false}\n  },\n  implementation: SliderOid,\n  stylesheets: 'default',\n  template: html`\n  <div id=\"oid-prs\" style=\"width:100%; display:flex; flex-direction:row\">\n    <span id=\"index\" style=\"flex:initial\"></span>\n    <input type=\"range\" id=\"oid-input\" min=\"{{this.min}}\" max=\"{{this.max}}\"\n           value=\"{{this.value}}\" style=\"flex:auto\" @input>\n  </div>`\n})","import { html, css } from '../../../infra/literals.js'\nimport { Oid } from '../../../base/oid'\nimport { OidUI } from '../../../base/oid-ui'\n\nexport class SplitPaneOid extends OidUI {\n  constructor () {\n    super()\n    this._x = 0\n    this._y = 0\n    this._sideASize = 0\n    this._onMousemove = this._onMousemove.bind(this)\n    this._onMouseup = this._onMouseup.bind(this)\n  }\n\n  async connectedCallback () {\n    await super.connectedCallback()\n    this._horz = !(this.split === 'vertical')\n\n    this._resizer = this.shadowRoot.getElementById('resizer')\n    this._sidea = this.shadowRoot.getElementById('sidea')\n    this._sideb = this.shadowRoot.getElementById('sideb')\n\n    if (this._horz) {\n      this._resizer.style.cursor = 'ew-resize'\n      this._resizer.style.height = '100%'\n      this._resizer.classList.add('divide-x')\n      this._sidea.style.width = this.proportion\n    } else {\n      this._resizer.style.cursor = 'ns-resize'\n      this._presentation.style.flexDirection = 'column'\n      this._resizer.style.width = '100%'\n      this._resizer.classList.add('divide-y')\n      this._sidea.style.height = this.proportion\n    }\n  }\n\n  _onMousedown (event) {\n    this._x = event.clientX\n    this._y = event.clientY\n    this._sideASize = (this._horz)\n      ? this._sidea.getBoundingClientRect().width\n      : this._sidea.getBoundingClientRect().height\n\n    this.shadowRoot.addEventListener('mousemove', this._onMousemove)\n    this.shadowRoot.addEventListener('mouseup', this._onMouseup)\n  }\n\n  _onMousemove (event) {\n    const dx = event.clientX - this._x\n    const dy = event.clientY - this._y\n\n    if (this._horz) {\n      const newSideAWidth =\n        (this._sideASize + dx) * 100 / this._presentation.getBoundingClientRect().width\n      this._sidea.style.width = newSideAWidth + '%'\n\n      this._resizer.style.cursor = 'col-resize'\n      document.body.style.cursor = 'col-resize'\n    } else {\n      const newSideAHeight =\n        (this._sideASize + dy) * 100 / this._presentation.getBoundingClientRect().height\n      this._sidea.style.height = newSideAHeight + '%'\n\n      this._resizer.style.cursor = 'row-resize'\n      document.body.style.cursor = 'row-resize'\n    }\n\n    this._sidea.style.userSelect = 'none'\n    this._sidea.style.pointerEvents = 'none'\n\n    this._sideb.style.userSelect = 'none'\n    this._sideb.style.pointerEvents = 'none'\n  }\n\n  _onMouseup (event) {\n    this.shadowRoot.removeEventListener('mousemove', this._onMousemove)\n    this.shadowRoot.removeEventListener('mouseup', this._onMouseup)\n\n    this._resizer.style.cursor = (this._horz) ? 'ew-resize' : 'ns-resize'\n    document.body.style.removeProperty('cursor')\n\n    this._sidea.style.removeProperty('user-select')\n    this._sidea.style.removeProperty('pointer-events')\n\n    this._sideb.style.removeProperty('user-select')\n    this._sideb.style.removeProperty('pointer-events')\n\n    this._notify('resize',\n      {awidth: this._sidea.style.width,\n       aheight: this._sidea.style.height,\n       bwidth: this._sideb.style.width,\n       bheight: this._sideb.style.height})\n  }\n}\n\nOid.component({\n  id: 'oid:split-pane',\n  element: 'split-pane-oid',\n  properties: {\n    split: {default: 'horizontal'},\n    proportion: {default: '50%'}\n  },\n  implementation: SplitPaneOid,\n  stylesheets: 'default',\n  styles: css`\n  .group {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n  .pane-b {\n    flex: 1;\n  }`,\n  template: html`\n  <div id=\"oid-prs\" class=\"group\">\n    <div class=\"bg-base\" id=\"sidea\"><slot name=\"side-a\"></slot></div>\n    <div class=\"divide\" id=\"resizer\" @mousedown></div>\n    <div class=\"pane-b bg-base\" id=\"sideb\"><slot name=\"side-b\"></slot></div>\n  </div>`\n})","import { Oid } from '../../../base/oid'\nimport { OidUI } from '../../../base/oid-ui'\n\nexport class StatePaneOid extends OidUI {\n  async connectedCallback () {\n    super.connectedCallback()\n    this._toInitial = this.initial\n    this._updateVisualState()\n\n    this._observer = new MutationObserver(\n      this._updateVisualState.bind(this))\n    this._observer.observe(this,\n      {childList: true, subtree: true})\n  }\n\n  _updateVisualState () {\n    if (this._toInitial != null) {\n      this._state = this.querySelector(`#${this._toInitial}`)\n      if (this._state != null)\n        this._toInitial = null\n    }\n    const children = this.querySelectorAll('*')\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i]\n      if (this._state == null)\n        this._state = child\n      if (child === this._state && child.style.display != null) {\n        child.style.removeProperty('display')\n      } else if (child.style.display == null ||\n                 child.style.display !== 'none') {\n        child.style.display = 'none'\n      }\n    }\n  }\n\n  handleFirst () {\n    this._state = this.firstElementChild\n    this._updateVisualState()\n  }\n\n  handleNext () {\n    if (this._state != null) {\n      let next = this._state.nextElementSibling\n      if (next == null) next = this.firstElementChild\n      this._state = next\n      this._updateVisualState()\n    }\n  }\n\n  handlePrev () {\n    if (this._state != null) {\n      let prev = this._state.previousElementSibling\n      if (prev == null) prev = this.lastElementChild\n      this._state = prev\n      this._updateVisualState()\n    }\n  }\n\n  handleLast () {\n    this._state = this.lastElementChild\n    this._updateVisualState()\n  }\n\n  handleState (topic, message) {\n    this._state = this.querySelector(`#${message.value}`)\n    this._updateVisualState()\n  }\n}\n\nOid.component({\n  id: 'oid:state-pane',\n  element: 'state-pane-oid',\n  properties: {\n    initial: {}\n  },\n  receive: ['first', 'next', 'prev', 'last', 'state'],\n  implementation: StatePaneOid,\n  stylesheets: 'default'\n})"],"names":["handler","html"],"mappings":"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"}